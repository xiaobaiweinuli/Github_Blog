name: Secure Deployment

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. 检出代码
      - name: Checkout
        uses: actions/checkout@v4

      # 2. 设置Node.js环境
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # 3. 安装依赖并构建前端
      - name: Install and Build
        run: |
          cd frontend
          npm install
          npm run build
        env:
          NODE_ENV: production

      # 4. 替换敏感信息
      - name: Replace Secrets
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          ALLOWED_USER: ${{ secrets.ALLOWED_USER }}
        run: |
          # 替换构建后的文件
          sed -i "s/CLIENT_ID_PLACEHOLDER/$CLIENT_ID/g" frontend/dist/*.html
          sed -i "s/CLIENT_SECRET_PLACEHOLDER/$CLIENT_SECRET/g" frontend/dist/auth.html
          sed -i "s/ALLOWED_USER_PLACEHOLDER/$ALLOWED_USER/g" frontend/dist/js/auth.js

      # 5. 配置GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v3

      # 6. 上传制品
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'frontend'

  deploy:
    needs: build-and-deploy
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
